# Use C++ build environment.
language: cpp

# Protobuf requires g++ (see https://github.com/google/protobuf/blob/master/src/README.md)
compiler:
    - gcc

addons:
  apt:
    sources:
      - boost-latest
    packages:
      - cmake
      - libboost-dev

# Cache dependencies to speed up the build.
cache:
    directories:
        - ${TRAVIS_BUILD_DIR}/deps/cmake
        - ${TRAVIS_BUILD_DIR}/deps/protobuf

# Handle dependencies in separate directory.
before_install:
    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    - mkdir -p "${DEPS_DIR}"
    - cd "${DEPS_DIR}"

install:
    # Install a recent version of CMake
    - |
        CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.1-Linux-x86_64.tar.gz"
        if [ ! -f ${DEPS_DIR}/cmake/bin/cmake ] ; then mkdir -p cmake ; travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake ; fi
        export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    # Install a recent version of the Protobuf
    - |
        PROTOBUF_URL="https://github.com/google/protobuf/releases/download/v3.4.0/protobuf-cpp-3.4.0.tar.gz"
        if [ ! -f ${DEPS_DIR}/protobuf/install/bin/protoc ] ; then mkdir -p protobuf ; travis_retry wget --no-check-certificate --quiet -O - ${PROTOBUF_URL} | tar --strip-components=1 -xz -C protobuf ; cd protobuf ; ./configure --prefix=${DEPS_DIR}/protobuf/install ; make ; make install ; fi
        export PATH=${DEPS_DIR}/protobuf/install/bin:${PATH}
        
# Change directory back to default build directory.
before_script:
    - cd "${TRAVIS_BUILD_DIR}"

# Run the build script.
script:
  - mkdir -p repost-common/generated/cpp
  - protoc --cpp_out="repost-common/generated/cpp" repost-common/repost.proto
  - mkdir -p build
  - cd build
  - cmake -D CMAKE_PREFIX_PATH:PATH=${DEPS_DIR}/protobuf/install ..
  - cmake --build .
